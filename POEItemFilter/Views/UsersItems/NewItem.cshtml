@model POEItemFilter.ViewModels.NewItemViewModel

@{
    ViewBag.Title = "Add item";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2><b>Add item</b></h2>
<hr />

<div id="itemInfo">
    <button id="basicToggle" type="button" class="btn btn-primary btn-sm" aria-label="Left Align">
        Basic information
        <span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span>
    </button>
    <p />
    <div id="databaseItems" class="container body-content">
        <p />
        <span>Select category: </span>
        <select id="baseTypes" class="my-btn">
            <option value=@(Model.BaseTypes.Last().Id + 1)>All</option>
            @foreach (var item in Model.BaseTypes)
    {
                <option value="@item.Id">@item.Name</option>
    }
        </select>
        <p />

        <span>Select type: </span>
        <select id="types" class="my-btn">
            <option value=@(Model.Types.Last().Id + 1)>All</option>
            @foreach (var item in Model.Types)
    {
                <option value="@item.Id">@item.Name</option>
    }
        </select>
        <p />

        @{
    if (Model.Attributes != null)
    {
                <span>Select attributes:</span>
                <select id="attribute1" class="my-btn">
                    <option value=@(Model.Attributes.Last().Id + 1)>All</option>
                    @foreach (var item in Model.Attributes)
            {
                        <option value="@item.Id">@item.Name</option>
            }
                </select>

                <select id="attribute2" class="my-btn">
                    <option value=@(Model.Attributes.Last().Id + 1)>All</option>
                    @foreach (var item in Model.Attributes)
            {
                        <option value="@item.Id">@item.Name</option>
            }
                </select>
    }
        }
        <p />

        <span>Select item: </span>
        <select id="items" class="my-btn">
            <option value=@(Model.Items.Last().Id + 1)>All</option>
            @foreach (var item in Model.Items)
    {
                <option value="@item.Id">@item.Name</option>
    }
        </select>
    </div>
    <hr />

    <button id="lvlToggle" type="button" class="btn btn-primary btn-sm" aria-label="Left Align">
        Level information
        <span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span>
    </button>
    <p />
    <div id="itemLvl" style="display:none" class="container body-content">
        <span>Item level: </span>
        <select id="itemLvlSelectSign" class="my-btn">
            <option value="300"></option>
            <option value="1">= (equl)</option>
            <option value="2">> (greater than)</option>
            <option value="3">< (less than)</option>
            <option value="4">>= (greater or equal)</option>
            <option value="5"><= (less or equal)</option>
        </select>

        <select id="itemLvlSelect" class="my-btn">
            <option value="300">All</option>
            @for (int i = 0; i <= 100; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <p></p>

        <span>Item quality: </span>
        <select id="itemQualitySelectSign" class="my-btn">
            <option value="300"></option>
            <option value="1">= (equl)</option>
            <option value="2">> (greater than)</option>
            <option value="3">< (less than)</option>
            <option value="4">>= (greater or equal)</option>
            <option value="5"><= (less or equal)</option>
        </select>

        <select id="itemQualitySelect" class="my-btn">
            <option value="300">All</option>
            @for (int i = 0; i <= 20; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <p></p>

        <span>Item rarity: </span>
        <select id="itemRaritySelectSign" class="my-btn">
            <option value="300"></option>
            <option value="1">= (equl)</option>
            <option value="2">> (greater than)</option>
            <option value="3">< (less than)</option>
            <option value="4">>= (greater or equal)</option>
            <option value="5"><= (less or equal)</option>
        </select>

        <select id="itemRaritySelect" class="my-btn">
            <option value="300">All</option>
            <option value="1">Normal</option>
            <option value="2">Magic</option>
            <option value="3">Rare</option>
            <option value="4">Unique</option>
        </select>
    </div>
    <hr />
    <button id="socketsToggle" type="button" class="btn btn-primary btn-sm" aria-label="Left Align">
        Sockets information
        <span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span>
    </button>
    <p />
    <div id="sockets" style="display:none" class="container body-content">
        <span>Number of sockets: </span>
        <select id="socketsNumberSelectSign" class="my-btn">
            <option value="300"></option>
            <option value="1">= (equl)</option>
            <option value="2">> (greater than)</option>
            <option value="3">< (less than)</option>
            <option value="4">>= (greater or equal)</option>
            <option value="5"><= (less or equal)</option>
        </select>

        <select id="socketsNumberSelect" class="my-btn">
            <option value="300">All</option>
            @for (int i = 1; i <= 6; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <p></p>

        <span>Number of linked sockets: </span>
        <select id="linkedSocketsNumberSelectSign" class="my-btn">
            <option value="300"></option>
            <option value="1">= (equl)</option>
            <option value="2">> (greater than)</option>
            <option value="3">< (less than)</option>
            <option value="4">>= (greater or equal)</option>
            <option value="5"><= (less or equal)</option>
        </select>

        <select id="linkedSocketsNumberSelect" class="my-btn">
            <option value="300">All</option>
            <option value="0">0</option>
            @for (int i = 2; i <= 6; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <p></p>

        <p>Colours of linked sockets:</p>
        <span>Red</span>
        <select id="redSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 6; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <span style="margin-left: 30px">Green</span>
        <select id="greenSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 6; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <span style="margin-left: 30px">Blue</span>
        <select id="blueSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 6; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <span style="margin-left: 30px">White</span>
        <select id="whiteSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 6; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <p></p>
    </div>

    <hr />
    <button id="sizeToggle" type="button" class="btn btn-primary btn-sm" aria-label="Left Align">
        Dimension information
        <span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span>
    </button>
    <p />
    <div id="size" style="display:none" class="container body-content">
        <span>Set height: </span>
        <select id="heightSelectSign" class="my-btn">
            <option value="300"></option>
            <option value="1">= (equl)</option>
            <option value="2">> (greater than)</option>
            <option value="3">< (less than)</option>
            <option value="4">>= (greater or equal)</option>
            <option value="5"><= (less or equal)</option>
        </select>

        <select id="heightSelect" class="my-btn">
            <option value="300">All</option>
            @for (int i = 1; i <= 4; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <p></p>
        <span>Set width: </span>
        <select id="widthSelectSign" class="my-btn">
            <option value="300"></option>
            <option value="1">= (equl)</option>
            <option value="2">> (greater than)</option>
            <option value="3">< (less than)</option>
            <option value="4">>= (greater or equal)</option>
            <option value="5"><= (less or equal)</option>
        </select>

        <select id="widthSelect" class="my-btn">
            <option value="300">All</option>
            @for (int i = 1; i <= 2; i++)
        {
                <option value="@i">@i</option>
        }
        </select>

        <p></p>
    </div>

    <hr />
    <button id="otherToggle" type="button" class="btn btn-primary btn-sm" aria-label="Left Align">
        Other information
        <span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span>
    </button>
    <p />
    <div id="other" style="display:none" class="container body-content">
        <span>Identified?</span>
        <select id="identifiedSelect" class="my-btn">
            <option value="0">No (default)</option>
            <option value="1">Yes</option>
        </select>

        <p></p>

        <span>Corrupted?</span>
        <select id="corruptedSelect" class="my-btn">
            <option value="0">No (default)</option>
            <option value="1">Yes</option>
        </select>

        <p></p>

        <span>Border color:</span>
        <select id="borderRedSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 255; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <select id="borderGreenSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 255; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <select id="borderBlueSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 255; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <p></p>

        <span>Text color:</span>
        <select id="textRedSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 255; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <select id="textGreenSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 255; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <select id="textBlueSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 255; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <p></p>

        <span>Background color:</span>
        <select id="backRedSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 255; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <select id="backGreenSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 255; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <select id="backBlueSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 0; i <= 255; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <p></p>

        <span>Font size:</span>
        <select id="fontSizeSelect" class="my-btn">
            <option value="300"></option>
            @for (int i = 18; i <= 45; i++)
        {
                <option value="@i">@i</option>
        }
        </select>
        <p></p>
    </div>
</div>

<div id="saveButton" style="float:right">
    <button id="saveItem" type="button" class="btn btn-default btn-success btn-lg" aria-label="Left Align" style="float:right">
        Add item
        <span class="glyphicon glyphicon-menu-right" aria-hidden="true"></span>
    </button>
</div>


    @section scripts
{
        <script>
            $(document).ready(function () {
                setOldValues();

                // Hide at start most part of view.
                $("#itemLvl").hide();
                $("#sockets").hide();
                $("#size").hide();
                $("#other").hide();

                // Toggle hide/show part of view.
                $("#basicToggle").click(function () {
                    $("#databaseItems").slideToggle();
                });

                $("#lvlToggle").click(function () {
                    $("#itemLvl").slideToggle();
                });

                $("#socketsToggle").click(function () {
                    $("#sockets").slideToggle();
                });

                $("#sizeToggle").click(function () {
                    $("#size").slideToggle();
                });

                $("#otherToggle").click(function () {
                    $("#other").slideToggle();
                });

                // This part of script applies to #databaseItems div element.
                $("#baseTypes").change(function () {
                    if ($("#baseTypes option:selected").text() == "Armour" || $("#baseTypes option:selected").text() == "All") {
                        $("#attribute1").show();
                        $("#attribute2").show();
                    } else {
                        $("#attribute1").hide();
                        $("#attribute2").hide();
                    }

                    var baseType = $("#baseTypes").val();
                    var type = null;
                    var attribute1 = null;
                    var attribute2 = null;
                    var item = null;

                    setCookie("baseTypeSelectedId", baseType);
                    setCookie("typeSelectedId", type);
                    setCookie("attribute1SelectedId", attribute1);
                    setCookie("attribute2SelectedId", attribute2);
                    setCookie("itemSelectedId", item);
                    setOldValues();

                    var selectedIds = String(baseType + "|" + type + "|" + attribute1 + "|" + attribute2); // basetype#type#attribute1#attribute2
                    $.get("/UsersItems/Refresh/" + selectedIds, function (data) {
                        $("#databaseItems").html(data);
                    });
                });

                $("#types").change(function () {
                    if ($("#baseTypes option:selected").text() == "Armour" || $("#types option:selected").text() == "BodyArmour" || $("#types option:selected").text() == "Helmet" ||
                        $("#types option:selected").text() == "Shield" || $("#types option:selected").text() == "Gloves" || $("#types option:selected").text() == "Boots") {
                        $("#attribute1").show();
                        $("#attribute2").show();
                    } else {
                        $("#attribute1").hide();
                        $("#attribute2").hide();
                    }

                    if ($("#baseTypes option:selected").text() != "All") {
                        var baseType = $("#baseTypes").val();
                        var type = $("#types").val();
                        var attribute1 = null;
                        var attribute2 = null;
                        var item = null;
                    } else {
                        var baseType = null;
                        var type = $("#types").val();
                        var attribute1 = null;
                        var attribute2 = null;
                        var item = null;
                    }

                    setCookie("baseTypeSelectedId", baseType);
                    setCookie("typeSelectedId", type);
                    setCookie("attribute1SelectedId", attribute1);
                    setCookie("attribute2SelectedId", attribute2);
                    setCookie("itemSelectedId", item);
                    setOldValues();

                    var selectedIds = String(baseType + "|" + type + "|" + attribute1 + "|" + attribute2); // basetype#type#attribute1#attribute2
                    $.get("/UsersItems/Refresh/" + selectedIds, function (data) {
                        $("#databaseItems").html(data);
                    });
                });

                $("#attribute1").change(function () {
                    if ($("#baseTypes option:selected").text() != "All") {
                        if ($("#types option:selected").text() != "All") {
                            var baseType = $("#baseTypes").val();
                            var type = $("#types").val();
                            var attribute1 = $("#attribute1").val();
                            if ($("#attribute2 option:selected").text() != "All") {
                                var attribute2 = $("#attribute2").val();
                            } else {
                                var attribute2 = null;
                            }
                            var item = null;
                        } else {
                            var baseType = $("#baseTypes").val();
                            var type = null;
                            var attribute1 = $("#attribute1").val();
                            if ($("#attribute2 option:selected").text() != "All") {
                                var attribute2 = $("#attribute2").val();
                            } else {
                                var attribute2 = null;
                            }
                            var item = null;
                        }
                    } else {
                        if ($("#types option:selected").text() != "All") {
                            var baseType = null;
                            var type = $("#types").val();
                            var attribute1 = $("#attribute1").val();
                            if ($("#attribute2 option:selected").text() != "All") {
                                var attribute2 = $("#attribute2").val();
                            } else {
                                var attribute2 = null;
                            }
                            var item = null;
                        } else {
                            var baseType = null;
                            var type = null;
                            var attribute1 = $("#attribute1").val();
                            if ($("#attribute2 option:selected").text() != "All") {
                                var attribute2 = $("#attribute2").val();
                            } else {
                                var attribute2 = null;
                            }
                            var item = null;
                        }
                    }

                    setCookie("baseTypeSelectedId", baseType);
                    setCookie("typeSelectedId", type);
                    setCookie("attribute1SelectedId", attribute1);
                    setCookie("attribute2SelectedId", attribute2);
                    setCookie("itemSelectedId", item);
                    setOldValues();

                    var selectedIds = String(baseType + "|" + type + "|" + attribute1 + "|" + attribute2); // basetype#type#attribute1#attribute2
                    $.get("/UsersItems/Refresh/" + selectedIds, function (data) {
                        $("#databaseItems").html(data);
                    });
                });

                $("#attribute2").change(function () {
                    if ($("#baseTypes option:selected").text() != "All") {
                        if ($("#types option:selected").text() != "All") {
                            var baseType = $("#baseTypes").val();
                            var type = $("#types").val();
                            var attribute2 = $("#attribute2").val();
                            if ($("#attribute1 option:selected").text() != "All") {
                                var attribute1 = $("#attribute1").val();
                            } else {
                                var attribute1 = null;
                            }
                            var item = null;
                        } else {
                            var baseType = $("#baseTypes").val();
                            var type = null;
                            var attribute2 = $("#attribute2").val();
                            if ($("#attribute1 option:selected").text() != "All") {
                                var attribute1 = $("#attribute1").val();
                            } else {
                                var attribute1 = null;
                            }
                            var item = null;
                        }
                    } else {
                        if ($("#types option:selected").text() != "All") {
                            var baseType = null;
                            var type = $("#types").val();
                            var attribute2 = $("#attribute2").val();
                            if ($("#attribute1 option:selected").text() != "All") {
                                var attribute1 = $("#attribute1").val();
                            } else {
                                var attribute1 = null;
                            }
                            var item = null;
                        } else {
                            var baseType = null;
                            var type = null;
                            var attribute2 = $("#attribute2").val();
                            if ($("#attribute1 option:selected").text() != "All") {
                                var attribute1 = $("#attribute1").val();
                            } else {
                                var attribute1 = null;
                            }
                            var item = null;
                        }
                    }

                    setCookie("baseTypeSelectedId", baseType);
                    setCookie("typeSelectedId", type);
                    setCookie("attribute1SelectedId", attribute1);
                    setCookie("attribute2SelectedId", attribute2);
                    setCookie("itemSelectedId", item);
                    setOldValues();

                    var selectedIds = String(baseType + "|" + type + "|" + attribute1 + "|" + attribute2); // basetype#type#attribute1#attribute2
                    $.get("/UsersItems/Refresh/" + selectedIds, function (data) {
                        $("#databaseItems").html(data);
                    });
                });

                function setCookie(cname, cvalue) {
                    document.cookie = cname + "=" + cvalue;
                }

                function getCookie(cname) {
                    var name = cname + "=";
                    var decodedCookie = decodeURIComponent(document.cookie);
                    var ca = decodedCookie.split(";");
                    for (var i = 0; i < ca.length; i++) {
                        var c = ca[i];
                        while (c.charAt(0) == ' ') {
                            c = c.substring(1);
                        }
                        if (c.indexOf(name) == 0) {
                            return c.substring(name.length, c.length);
                        }
                    }
                    return "";
                }

                function setOldValues() {
                    var baseTypeSelectedId = getCookie("baseTypeSelectedId");
                    var typeSelectedId = getCookie("typeSelectedId");
                    var attribute1SelectedId = getCookie("attribute1SelectedId");
                    var attribute2SelectedId = getCookie("attribute2SelectedId");
                    var itemSelectedId = getCookie("itemSelectedId");

                    if (baseTypeSelectedId != "" && baseTypeSelectedId != "null") {
                        $("#baseTypes").val(baseTypeSelectedId);
                    }
                    else {
                        $("#baseTypes option:first").val();
                    }

                    if (typeSelectedId != "" && typeSelectedId != "null") {
                        $("#types").val(typeSelectedId);
                    }
                    else {
                        $("#types option:first").val();
                    }

                    if (attribute1SelectedId != "" && attribute1SelectedId != "null") {
                        $("#attribute1").val(attribute1SelectedId);
                    }
                    else {
                        $("#attribute1 option:first").val();
                    }

                    if (attribute2SelectedId != "" && attribute2SelectedId != "null") {
                        $("#attribute2").val(attribute2SelectedId);

                    }
                    else {
                        $("#attribute2 option:first").val();
                    }

                    if (itemSelectedId != "" && itemSelectedId != "null") {
                        $("#items").val(itemSelectedId);

                    }
                    else {
                        $("#items option:first").val();
                    }
                }
            });
        </script>
    }
