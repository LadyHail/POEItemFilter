@model POEItemFilter.ViewModels.EditFilterViewModel

@{
    ViewBag.Title = "Edit items filter";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var classes = new SelectList(new[]
    {
        new {Id = "0", Name = "All"},
        new {Id = "1", Name = "Marauder"},
        new {Id = "2", Name = "Duelist"},
        new {Id = "3", Name = "Ranger"},
        new {Id = "4", Name = "Shadow"},
        new {Id = "5", Name = "Witch"},
        new {Id = "6", Name = "Templar"},
        new {Id = "7", Name = "Scion"},
    }, "Id", "Name", 0);
}

<div class="body-content container table-bordered alert-info">
    <ul class="list-unstyled">
        <li class="text-justify"><span class="glyphicon glyphicon-info-sign btn-lg" aria-hidden="true"></span>You're reponsible on items order in your filter. The program do not set it up. It doesn't know which item should go first. You can change item order at any time.</li>
        <li class="text-justify"><span class="glyphicon glyphicon-info-sign btn-lg" aria-hidden="true"></span>The program is saving each property of the item by given algorithm. After download make sure the filter is saved by the way as you wanted. At any time you can change the filter on your own.</li>
    </ul>
</div>

<div id="row">

    <div id="newFilter">
        <h2>Edit items filter</h2>

        <p>
            <textarea id="filterName" class="my-textarea">@Model.Filter.Name</textarea>
        </p>

        <p>
            <textarea id="description" class="my-textarea">@Model.Filter.Description</textarea>
        </p>
        @if (Model.Filter.Dedicated != null)
        {
            <p id="dedicatedP">
                @Html.Label("Is your filter dedicated to class?")
                @Html.CheckBox("dedicatedCB", true)
            </p>
            <p id="classesDL">
                @Html.DropDownList("classes", classes, Model.Filter.Dedicated.ToString(), new { @class = "my-btn" })
            </p>
        }
        <p>
            <a href="~/UsersItems/NewItemDb/@Model.Filter.Id" id="newItem" class="btn btn-primary">New Item <span class="glyphicon glyphicon-menu-right" aria-hidden="true"></span></a>
            <a href="#" id="saveFilter" class="btn btn-primary btn-success">Save filter <span class="glyphicon glyphicon-menu-right" aria-hidden="true"></span></a>
        </p>
    </div>

    @if (Model != null)
    {
        <div id="itemsList">
            <table class="table" id="itemsListTable">
                <tr>
                    <th>Items list</th>
                    <th></th>
                    <th></th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
                @foreach (var item in Model.ItemsList)
                {
                    <tr>
                        <td>@item.ToString()</td>
                        <td><button data-item-id="@item.Id" class="btn btn-sm btn-primary js-id-up"><span class="glyphicon glyphicon-menu-up" aria-hidden="true"></span></button></td>
                        <td><button data-item-id="@item.Id" class="btn btn-sm btn-primary js-id-down"><span class="glyphicon glyphicon-menu-down" aria-hidden="true"></span></button></td>
                        <td><button data-item-id="@item.Id" class="btn btn-sm btn-primary js-edit">Edit</button></td>
                        <td><button data-item-id="@item.Id" class="btn btn-sm btn-primary js-delete">Delete</button></td>
                    </tr>
                }
            </table>
        </div>
    }
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            $("#filterName").css({ "height": 28 });
            $("#description").css({ "height": 112 });
            $(".btn").hide();
            $("#newFilter").hide().slideDown(500, function () {
                $(".btn").fadeIn(1000);
            });

            //Change item order - move up.
            $("#itemsListTable").on("click", ".js-id-up", function () {
                var button = $(this);
                $.ajax({
                    url: "@Url.Action("ChangeDbItemOrderUp", "Filters")" + "/" + button.attr("data-item-id"),
                    method: "POST",
                    success: function (data) {
                        window.location.href = "/Filters/EditFilter/" + "@Model.Filter.Id";
                    },
                });
            });

            //Change item order - move down.
            $("#itemsListTable").on("click", ".js-id-down", function () {
                var button = $(this);
                $.ajax({
                    url: "@Url.Action("ChangeDbItemOrderDown", "Filters")" + "/" + button.attr("data-item-id"),
                    method: "POST",
                    success: function (data) {
                        window.location.href = "/Filters/EditFilter/" + "@Model.Filter.Id";
                    },
                });
            });

            //Edit item
            $("#itemsListTable").on("click", ".js-edit", function () {
                var button = $(this);
                $.ajax({
                    url: "@Url.Action("ItemDb", "UsersItems")" + "/" + button.attr("data-item-id"),
                    //method: "POST",
                    success: function (data) {
                        window.location.href = "/UsersItems/ItemDb/" + button.attr("data-item-id");
                    },
                });
            });

            //Delete item from list
            $("#itemsListTable").on("click", ".js-delete", function () {
                var button = $(this);
                bootbox.confirm("Are you sure you want to delete this item?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "@Url.Action("DeleteItemDb", "UsersItems")" + "/" + button.attr("data-item-id"),
                            //method: "DELETE",
                            success: function () {
                                button.parents("tr").remove();
                            },
                        });
                    }
                });
            });

            //Prevent user to enter special character.
            $("textarea").keyup(function() {
                let raw_text = $(this).val();
                let return_text = raw_text.replace(/[^a-zA-Z0-9 _]/g, '');
                $(this).val(return_text);
            });

            //Set behaviour of checkbox.
            var dedicated = $("#dedicatedCB");
            var classes = $("#classesDL").detach();
            $("#dedicatedCB").click(function () {
                if (document.getElementById("dedicatedCB").checked) {
                    classes.insertAfter(dedicated);
                } else {
                    classes.detach();
                }
            });

            //Check if input is valid. Send data to server. Output: create filter file.
            $("#saveFilter").click(function () {
                const filterName = $("#filterName").val();
                const description = $("#description");

                if (filterName === "" || filterName === "Enter filter name") {
                    alert("Filter name can't be empty!");
                } else if ($("#itemsList").length === 0) {
                    alert("Can't create empty filter! Add items!")
                } else if ($("#classes").val() < 0 && $("#classes").val() > 7) {
                    alert("Invalid class")
                } else if ("@Model.ItemsList.Count" === "0"){
                    alert("Cannot save empty filter")
                } else {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("SaveFilter", "Filters")",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: JSON.stringify({
                            "filterName": $("#filterName").val(), "description": $("#description").val(), "dedicated": $("#classes").val(), "id": "@Model.Filter.Id" }),
                        success: function (data) {
                                window.location.href = "/Filters/MyFilters";
                                ClearSession();
                        },
                    });
                }
            });

            //Clear session after file is created.
            function ClearSession() {
                $("#filterName").val($("#filterName").prop("defaultValue"));
                $("#description").val($("#description").prop("defaultValue"));
                dedicated.prop("checked", false);
                classes.detach();
                $("#itemsList").remove();
                $.post("/Filters/ClearSession", function () {
                });
            };
    });
    </script>
}